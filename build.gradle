plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
}
// build.gradle
def customBuildDir = System.getenv("BUILD_DIR") ?: "$projectDir/build"
project.layout.buildDirectory.set(file(customBuildDir))

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Spring Cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    // Cache type : caffeine
    implementation 'com.github.ben-manes.caffeine:caffeine'
    // Cache type : redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // test
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:mysql:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
}

tasks.named('test') {
    useJUnitPlatform()
}
